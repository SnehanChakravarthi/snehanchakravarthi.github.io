---
import { Image } from 'astro:assets';

import Layout from '@/layouts/Layout.astro';
import Skillbox from '@/components/astroComponents/Skillbox.astro';
import ViewSiteBadge from '@/components/astroComponents/ViewSiteBadge.astro';
import Macbook from '@/components/astroComponents/Macbook.astro';
import HeadingLine from '@/components/astroComponents/HeadingLine.astro';

import Acetrait3 from '@/assets/images/acetrait/acetrait3.png';
import Acetrait4 from '@/assets/images/acetrait/acetrait4.png';
import Acetrait5 from '@/assets/images/acetrait/acetrait5.png';
import Acetrait6 from '@/assets/images/acetrait/acetrait6.png';
---

<Layout title="Acetrait | Snehan Chakra Varthi">
	<ViewSiteBadge link="https://www.acetrait.com" />

	<div
		class="mb-20 flex max-w-5xl flex-col items-center space-y-8 px-4 text-center font-redhat text-sm dark:text-pink-600 sm:px-8 sm:text-base md:px-12"
	>
		<h1
			class="dark:text-shadow-3d-dark text-shadow mt-14 font-microgammaBold text-3xl text-cyan-400 dark:text-white sm:text-5xl"
		>
			ACETRAIT
		</h1>

		<HeadingLine title="what is it?" />
		<p>
			Acetrait is an AI-powered platform designed for the <span class="text-decoration"
				>recruitment process for both companies and job seekers.</span
			> At its core, Acetrait simplifies and automates the task of creating engaging job posts, developing
			ideal candidate personas, conducting in-depth interviews, and evaluating candidates through AI and
			LLMs.
		</p>
		<Macbook className="max-w-full" videoChoice="acetrait" />
		<HeadingLine title="stack ?" />
		<p>
			Initially, I wanted to build the application with <Skillbox
				skill="svelte"
				iconClass="i-logos-svelte-icon "
			/> in
			<Skillbox skill="sveltekit" iconClass="i-logos-svelte-kit " /> wishing to take advantage of Svelte's
			nice global state logic, but my love for <Skillbox
				skill="next.js"
				iconClass="i-logos-nextjs-icon "
			/> combined with its amazing developer experience and the latest <span class="text-decoration"
				>Server Actions</span
			> made me go with Next.js. Back into the world of <Skillbox
				skill="react"
				iconClass="dark:i-logos-react i-skill-icons-react-dark "
			/>, with <Skillbox skill="tailwindcss" iconClass="i-logos-tailwindcss-icon " />, I started to
			have fun coding the front end in a matter of days.
		</p>

		<HeadingLine title="backend" />
		<p>
			I built the server mostly utilising the new Server Actions, with <Skillbox
				skill="nodejs"
				iconClass="i-logos-nodejs-icon "
			/>, and hosted on <Skillbox skill="vercel" iconClass="i-logos-vercel-icon " /> ofc. Also used <span
				class="text-decoration"
				>edge functions
			</span> for couple of things in the application, to save money by not running function on the servers
			as there were long waiting periods for response from some API fetch calls from the LLMs, frequently
			hitting the <span class="text-decoration">Server Execution Limits</span> on Vercel.
		</p>
		<Macbook className="max-w-full" videoChoice="acetrait2" />

		<p>
			What else? I fully committed to <Skillbox
				skill="typescript"
				iconClass="i-skill-icons-typescript "
			/>. The database is built on <Skillbox skill="supabase" iconClass="i-logos-supabase-icon " />,
			and I was quickly able to set up <span class="text-decoration">secure cookie based auth</span>
			and in no time I had a highly integrated RLS backed <Skillbox
				skill="postgresql"
				iconClass="i-logos-postgresql "
			/> database, just waiting for my server actions to come fetch and feed them. The AI is powered by
			<Skillbox skill="openai" iconClass="i-logos-openai-icon " /> API.
		</p>

		<HeadingLine title="features" />
		<ul class="space-y-4 *:flex *:flex-col">
			<li>
				<p class="text-decoration text-lg">AI-Driven Interviews</p>
				<p>
					Personalized, in-depth chat-based interviews that evaluate a candidate's fit for the job
					position. The AI is trained to ask relevant questions but using a dynamic real time prompting
					technique.
				</p>
			</li>
			<li>
				<p class="text-decoration text-lg">Candidate Evaluation and Scoring</p> AI assesses candidates across
				multiple attributes, presenting results in a spider chart. In order to make the AI scoring more reliable,
				the latest API attributes from OpenAI are used to their full potential.
			</li>
			<li>
				<p class="text-decoration text-lg">Automated Job Post Creation</p>
				<p>
					Generate captivating job advertisements and ideal candidate personas with just basic job
					details.
				</p>
			</li>
			<li>
				<p class="text-decoration text-lg">Job Feed</p> Job posts are accessible in a comprehensive public
				feed for candidates.
			</li>
		</ul>
		<Image src={Acetrait3} alt="Screenshot of organisation dashboard" />
		<p>
			Organisation dashboard, where you can create job posts, view applicants, and take AI interview
			for the organisation, to help the AI understand the organisation better.
		</p>
		<Image src={Acetrait4} alt="Screenshot of creating Job post using AI" />
		<p>
			Creating job post using AI, just give the basic details and the AI will create the job post for
			you.
		</p>
		<Image src={Acetrait5} alt="Screenshot of candidate grading" />
		<p>AI grading of the candidate, with the reasoning for the score.</p>
		<Image src={Acetrait6} alt="Screenshot of candidate grading reasoning" />
		<p>AI grading reasoning, with the attributes and the score.</p>

		<HeadingLine title="Technical Overview" />

		<ul class="space-y-4 *:flex *:flex-col">
			<li>
				<p class="text-decoration text-lg">Frontend</p>
				<p>
					Utilizing Next.js 14 and React with Tailwind CSS and Shadcn for a user-friendly interface. The
					application ensures a modern, fast, and secure user experience.
				</p>
			</li>
			<li>
				<p class="text-decoration text-lg">Distinct Interfaces for Users</p>
				<p>
					Features tailored UIs for both candidates and recruiters, equipped with role-specific
					functionalities.
				</p>
			</li>
			<li>
				<p class="text-decoration text-lg">Backend and Edge runime</p>
				<p>
					The backend is built on Node.js, hosted on Vercel, and uses Edge functions for enhanced
					performance. React Server Components are used for security and efficiency.
				</p>
			</li>
			<li>
				<p class="text-decoration text-lg">Database and AI Integration</p>
				<p>
					Supabase is used for the database, ensuring scalability and data integrity. The AI component,
					powered by OpenAI's API, is fine-tuned for accuracy and relevance.
				</p>
			</li>
		</ul>

		<HeadingLine title="Result" />

		<p>
			The final website is still under development, with more innovative features and updates coming to
			it. But it is already being used by a couple of organisations for testing and trying out the AI
			features on real interviews. Head over to <a
				href="https://www.acetrait.com"
				class="text-decoration">www.acetrait.com</a
			> to test it yourself.
			<br /><br />This project has led me to better understand AI and LLMs in general, and I had a
			great developer experience while coding this application. Largely it was thanks to the amazing
			libraries that simplifies the use of AI for the top LLMs providers like OpenAI, Mixtral etc.
		</p>
	</div>
</Layout>
